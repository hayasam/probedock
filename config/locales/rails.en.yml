en:
  date:
    formats:
      # Use the strftime parameters for formats.
      # When no format has been given, it uses default.
      # You can provide other formats here if you like!
      default: "%Y-%m-%d"
      short: "%b %d"
      long: "%B %d, %Y"

    day_names: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday]
    abbr_day_names: [Sun, Mon, Tue, Wed, Thu, Fri, Sat]

    # Don't forget the nil at the beginning; there's no such thing as a 0th month
    month_names: [~, January, February, March, April, May, June, July, August, September, October, November, December]
    abbr_month_names: [~, Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec]
    
    # Used in date_select and datime_select.
    order: 
      - :year
      - :month
      - :day

  time:
    formats:
      default: "%a, %d %b %Y %H:%M:%S %z"
      short: "%d %b %H:%M"
      long: "%B %d, %Y %H:%M"
    am: "am"
    pm: "pm"

  # Used in distance_of_time_in_words(), distance_of_time_in_words_to_now(), time_ago_in_words()
  datetime:
    distance_in_words:
      half_a_minute: "half a minute"
      less_than_x_seconds:
        one:   "less than 1 second"
        other: "less than {{count}} seconds"
      x_seconds:
        one:   "1 second"
        other: "{{count}} seconds"
      less_than_x_minutes:
        one:   "less than a minute"
        other: "less than {{count}} minutes"
      x_minutes:
        one:   "1 minute"
        other: "{{count}} minutes"
      about_x_hours:
        one:   "about 1 hour"
        other: "about {{count}} hours"
      x_days:
        one:   "1 day"
        other: "{{count}} days"
      about_x_months:
        one:   "about 1 month"
        other: "about {{count}} months"
      x_months:
        one:   "1 month"
        other: "{{count}} months"
      about_x_years:
        one:   "about 1 year"
        other: "about {{count}} years"
      over_x_years:
        one:   "over 1 year"
        other: "over {{count}} years"
      almost_x_years:
        one:   "almost 1 year"
        other: "almost {{count}} years"
    prompts:
      year:   "Year"
      month:  "Month"
      day:  "Day"
      hour:   "Hour"
      minute: "Minute"
      second: "Seconds"

    number:
      # Used in number_with_delimiter()
      # These are also the defaults for 'currency', 'percentage', 'precision', and 'human'
      format:
        # Sets the separator between the units, for more precision (e.g. 1.0 / 2.0 == 0.5)
        separator: "."
        # Delimets thousands (e.g. 1,000,000 is a million) (always in groups of three)
        delimiter: ","
        # Number of decimals, behind the separator (the number 1 with a precision of 2 gives: 1.00)
        precision: 3
        # If set to true, precision will mean the number of significant digits instead
        # of the number of decimal digits (1234 with precision 2 becomes 1200, 1.23543 becomes 1.2)
        significant: false
        # If set, the zeros after the decimal separator will always be stripped (eg.: 1.200 will be 1.2)
        strip_insignificant_zeros: false
        
      # Used in number_to_currency()
      currency:
        format:
          # Where is the currency sign? %u is the currency unit, %n the number (default: $5.00)
          format: "%u%n"
          unit: "$"
          # These three are to override number.format and are optional
          separator: "."
          delimiter: ","
          precision: 2
          significant: false
          strip_insignificant_zeros: false
      # Used in number_to_percentage()
      percentage:
        format:
          # These three are to override number.format and are optional
          # separator: 
          delimiter: ""
          # precision:
      # Used in number_to_precision()
      precision:
        format:
          # These three are to override number.format and are optional
          # separator:
          delimiter: ""
          # precision:
      # Used in number_to_human_size()
      human:
        format:
          # These three are to override number.format and are optional
          # separator: 
          delimiter: ""
          precision: 1
          significant: true
          strip_insignificant_zeros: true
        storage_units:
          # Storage units output formatting.
          # %u is the storage unit, %n is the number (default: 2 MB)
          format: "%n %u"
          units:
            byte:
              one:   "Byte"
              other: "Bytes"
              kb: "KB"
              mb: "MB"
              gb: "GB"
              tb: "TB"
      decimal_units:
        format: "%n %u"
        # Decimal units output formatting
        # By default we will only quantify some of the exponents but the 
        # commented ones might be defined or overridden by the user.
        units:
          # femto: Quadrillionth
          # pico: Trillionth
          # nano: Billionth
          # micro: Millionth
          # mili: Thousandth
          # centi: Hundredth
          # deci: Tenth
          unit: ""
          # ten:
          # one: Ten
          # other: Tens
          # hundred: Hundred
          thousand: Thousand
          million: Million
          billion: Billion
          trillion: Trillion
          quadrillion: Quadrillion
              
  # Used in array.to_sentence.
  support:
    array:
      words_connector: ", "
      two_words_connector: " and "
      last_word_connector: ", and "   
  
    select:
      # default value for :prompt => true in FormOptionsHelper
      prompt: "Please select"

  helpers:
    select:
      prompt: "Please select"
    submit:
      create: 'Create %{model}'
      update: 'Update %{model}'
      submit: 'Save %{model}'
      
  errors:
    # The default format to use in full error messages.
    format: "%{attribute} %{message}"
    errors: 
      template: &errors_template
        header:
          one:  "1 error prohibited this %{model} from being saved"
          other:  "%{count} errors prohibited this %{model} from being saved"
        # The variable :count is also available
        body: "There were problems with the following fields:"
      messages: &errors_messages
        taken: "has already been taken"
        record_invalid: "Validation failed: %{errors}"
        must_not_change: "cannot be changed"
        must_be_owned_by_user: "must be owned by the user"
        must_not_be_technical_user: "must not be a technical user of another organization"

  activerecord:
    errors:
      template:
        header:
          one: "1 error prohibited this %{model} from being saved"
          other: "%{count} errors prohibited this %{model} from being saved"
        body: "There were problems with the following fields:"

      messages:
        taken: "has already been taken"
        record_invalid: "Validation failed: %{errors}"
        <<: *errors_messages

      full_messages:
        format: "%{attribute} %{message}"
